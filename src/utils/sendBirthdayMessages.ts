import { birthdayMessagingService } from '../services/birthdayMessaging.service';

/**
 * –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å –¥–∞—Ç–æ–π —Ä–æ–∂–¥–µ–Ω–∏—è
 */
export const toArcana = (sum: number): number => {
    while (sum > 22) {
      sum -= 22;
    }
    return sum;
  };
export async function sendBirthdayMessagesToAllUsers() {
    try {
        console.log('üéÇ Starting to send birthday messages to all users...');
        
        const result = await birthdayMessagingService.sendNow();
        
        console.log(`üìä Birthday messaging completed:`);
        console.log(`   Total users: ${result.total}`);
        console.log(`   Success: ${result.success}`);
        console.log(`   Failed: ${result.failed}`);
        
        return result;
    } catch (error) {
        console.error('‚ùå Error sending birthday messages:', error);
        throw error;
    }
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
 */
export function startBirthdayScheduler() {
    try {
        console.log('üöÄ Starting birthday messaging scheduler...');
        
        // –í–∫–ª—é—á–∞–µ–º —Å–µ—Ä–≤–∏—Å
        birthdayMessagingService.updateConfig({ enabled: true });
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
        birthdayMessagingService.startBirthdayScheduler();
        
        console.log('‚úÖ Birthday messaging scheduler started successfully');
    } catch (error) {
        console.error('‚ùå Error starting birthday scheduler:', error);
        throw error;
    }
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
 */
export function stopBirthdayScheduler() {
    try {
        console.log('üõë Stopping birthday messaging scheduler...');
        
        birthdayMessagingService.stopBirthdayScheduler();
        
        console.log('‚úÖ Birthday messaging scheduler stopped successfully');
    } catch (error) {
        console.error('‚ùå Error stopping birthday scheduler:', error);
        throw error;
    }
}
